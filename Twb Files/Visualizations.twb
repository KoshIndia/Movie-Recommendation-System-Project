<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='netflix_titles' inline='true' name='federated.0rths571vl8one1f1tgtx0c8plge' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflix_titles' name='textscan.0hn67wj0593d1410ff3hs0hvhmen'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/Y520-R0IN/Desktop/IBM Project/netflix_titles.csv' dataRefreshTime='' directory='C:/Users/Y520-R0IN/Desktop/IBM Project' filename='C:/Users/Y520-R~1/AppData/Local/Temp/TableauTemp/0rbn0wh08ip2tm1gepekd0lxtdmc/netflix_titles.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hn67wj0593d1410ff3hs0hvhmen' name='netflix_titles.csv' table='[netflix_titles#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L7788:no:A1:L7788:1' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='show_id' ordinal='0' />
            <column datatype='string' name='type' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='director' ordinal='3' />
            <column datatype='string' name='cast' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='date' name='date_added' ordinal='6' />
            <column datatype='integer' name='release_year' ordinal='7' />
            <column datatype='string' name='rating' ordinal='8' />
            <column datatype='string' name='duration' ordinal='9' />
            <column datatype='string' name='listed_in' ordinal='10' />
            <column datatype='string' name='description' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0hn67wj0593d1410ff3hs0hvhmen' name='netflix_titles.csv' table='[netflix_titles#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L7788:no:A1:L7788:1' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='show_id' ordinal='0' />
            <column datatype='string' name='type' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='director' ordinal='3' />
            <column datatype='string' name='cast' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='date' name='date_added' ordinal='6' />
            <column datatype='integer' name='release_year' ordinal='7' />
            <column datatype='string' name='rating' ordinal='8' />
            <column datatype='string' name='duration' ordinal='9' />
            <column datatype='string' name='listed_in' ordinal='10' />
            <column datatype='string' name='description' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L7788:no:A1:L7788:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>15577</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[show_id]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>130</remote-type>
            <local-name>[director]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>director</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cast</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cast]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>cast</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_added</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_added]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>date_added</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[listed_in]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>listed_in</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles.csv' datatype='table' name='[__tableau_internal_object_id__].[netflix_titles.csv_2DF6222721324144B64F34E24A407B9C]' role='measure' type='quantitative' />
      <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Added' datatype='date' name='[date_added]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
      <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
      <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column caption='Show Id' datatype='string' name='[show_id]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;TV Show&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Movie&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='netflix_titles.csv' id='netflix_titles.csv_2DF6222721324144B64F34E24A407B9C'>
            <properties context=''>
              <relation connection='textscan.0hn67wj0593d1410ff3hs0hvhmen' name='netflix_titles.csv' table='[netflix_titles#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:L7788:no:A1:L7788:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='show_id' ordinal='0' />
                  <column datatype='string' name='type' ordinal='1' />
                  <column datatype='string' name='title' ordinal='2' />
                  <column datatype='string' name='director' ordinal='3' />
                  <column datatype='string' name='cast' ordinal='4' />
                  <column datatype='string' name='country' ordinal='5' />
                  <column datatype='date' name='date_added' ordinal='6' />
                  <column datatype='integer' name='release_year' ordinal='7' />
                  <column datatype='string' name='rating' ordinal='8' />
                  <column datatype='string' name='duration' ordinal='9' />
                  <column datatype='string' name='listed_in' ordinal='10' />
                  <column datatype='string' name='description' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Content Added Over The Years'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Bookman Old Style' fontsize='18'>In year 2019 most of the Movies and Tv shows were added. Then it decreases in year 2020.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.0rths571vl8one1f1tgtx0c8plge' />
          </datasources>
          <datasource-dependencies datasource='federated.0rths571vl8one1f1tgtx0c8plge'>
            <column-instance column='[date_added]' derivation='Count' name='[cnt:date_added:qk]' pivot='key' type='quantitative' />
            <column caption='Date Added' datatype='date' name='[date_added]' role='dimension' type='ordinal' />
            <column-instance column='[date_added]' derivation='Year' name='[yr:date_added:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rths571vl8one1f1tgtx0c8plge].[yr:date_added:ok]'>
            <groupfilter from='2008' function='range' level='[yr:date_added:ok]' to='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rths571vl8one1f1tgtx0c8plge].[yr:date_added:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:date_added:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:date_added:qk]' />
              <text column='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:date_added:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:date_added:qk]</rows>
        <cols>[federated.0rths571vl8one1f1tgtx0c8plge].[yr:date_added:ok]</cols>
      </table>
      <simple-id uuid='{9051B986-0078-4B48-AF13-2B80CED44FE9}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{67262260-7135-49E0-9E09-AFAFDBB268E6}' />
    </worksheet>
    <worksheet name='Top Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.0rths571vl8one1f1tgtx0c8plge' />
          </datasources>
          <datasource-dependencies datasource='federated.0rths571vl8one1f1tgtx0c8plge'>
            <column-instance column='[type]' derivation='Count' name='[cnt:type:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([type])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Argentina&quot;' function='range' level='[none:country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]' direction='ASC' using='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]' />
          <slices>
            <column>[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]</rows>
        <cols>[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{82C2187C-7FE1-4602-B908-EEA133BC6A04}' />
    </worksheet>
    <worksheet name='Top Movies'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.0rths571vl8one1f1tgtx0c8plge' />
          </datasources>
          <datasource-dependencies datasource='federated.0rths571vl8one1f1tgtx0c8plge'>
            <column-instance column='[type]' derivation='Count' name='[cnt:type:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([type])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Argentina&quot;' function='range' level='[none:country:nk]' to='&quot;Argentina, United States&quot;' />
                  <groupfilter from='&quot;Argentina, Uruguay, Serbia&quot;' function='range' level='[none:country:nk]' to='&quot;Australia, Iraq&quot;' />
                  <groupfilter from='&quot;Australia, United Arab Emirates&quot;' function='range' level='[none:country:nk]' to='&quot;Austria, Czech Republic&quot;' />
                  <groupfilter from='&quot;Austria, Iraq, United States&quot;' function='range' level='[none:country:nk]' to='&quot;Bangladesh&quot;' />
                  <groupfilter from='&quot;Belgium&quot;' function='range' level='[none:country:nk]' to='&quot;Belgium, Ireland, Netherlands, Germany, Afghanistan&quot;' />
                  <groupfilter from='&quot;Belgium, United Kingdom, United States&quot;' function='range' level='[none:country:nk]' to='&quot;Brazil, Netherlands, United States, Colombia, Austria, Germany&quot;' />
                  <groupfilter from='&quot;Brazil, United States&quot;' function='range' level='[none:country:nk]' to='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Belgium&quot;' />
                  <groupfilter from='&quot;Canada, France, Italy, Morocco, United States&quot;' function='range' level='[none:country:nk]' to='&quot;Canada, Germany, France, United States&quot;' />
                  <groupfilter from='&quot;Canada, Hungary, United States&quot;' function='range' level='[none:country:nk]' to='&quot;Canada, Ireland, United States&quot;' />
                  <groupfilter from='&quot;Canada, Japan, United States&quot;' function='range' level='[none:country:nk]' to='&quot;Canada, United States, Cayman Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, India, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, United Kingdom&quot;' />
                  <groupfilter from='&quot;Chile&quot;' function='range' level='[none:country:nk]' to='&quot;Chile, France&quot;' />
                  <groupfilter from='&quot;Chile, Peru&quot;' function='range' level='[none:country:nk]' to='&quot;China, Taiwan&quot;' />
                  <groupfilter from='&quot;China, United States&quot;' function='range' level='[none:country:nk]' to='&quot;Colombia, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, Peru, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia, Slovenia, Serbia, Montenegro&quot;' />
                  <groupfilter from='&quot;Czech Republic, France&quot;' function='range' level='[none:country:nk]' to='&quot;Denmark, Indonesia, Finland, Norway, United Kingdom, Israel, France, United States, Germany, Netherlands&quot;' />
                  <groupfilter from='&quot;Denmark, Spain&quot;' function='range' level='[none:country:nk]' to='&quot;Egypt, France&quot;' />
                  <groupfilter from='&quot;Finland, Germany, Belgium&quot;' function='range' level='[none:country:nk]' to='&quot;France, Algeria&quot;' />
                  <groupfilter from='&quot;France, Belgium&quot;' function='range' level='[none:country:nk]' to='&quot;France, Egypt&quot;' />
                  <groupfilter from='&quot;France, Germany, Czech Republic, Belgium&quot;' function='range' level='[none:country:nk]' to='&quot;France, Japan&quot;' />
                  <groupfilter from='&quot;France, Lebanon&quot;' function='range' level='[none:country:nk]' to='&quot;France, Switzerland, Spain, United States, United Arab Emirates&quot;' />
                  <groupfilter from='&quot;France, United Kingdom, India&quot;' function='range' level='[none:country:nk]' to='&quot;France, United States&quot;' />
                  <groupfilter from='&quot;France, United States, Mexico&quot;' function='range' level='[none:country:nk]' to='&quot;Germany, Australia&quot;' />
                  <groupfilter from='&quot;Germany, Belgium&quot;' function='range' level='[none:country:nk]' to='&quot;Germany, China, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France, Luxembourg, United Kingdom, United States&quot;' />
                  <groupfilter from='&quot;Germany, France, United States, Canada, United Kingdom&quot;' function='range' level='[none:country:nk]' to='&quot;Germany, United States, Hong Kong, Singapore&quot;' />
                  <groupfilter from='&quot;Germany, United States, Sweden&quot;' function='range' level='[none:country:nk]' to='&quot;India, Germany, Austria&quot;' />
                  <groupfilter from='&quot;India, Iran&quot;' function='range' level='[none:country:nk]' to='&quot;Ireland, Canada, United Kingdom, United States&quot;' />
                  <groupfilter from='&quot;Ireland, France, Iceland, United States, Mexico, Belgium, United Kingdom, Hong Kong&quot;' function='range' level='[none:country:nk]' to='&quot;Italy, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, France, Switzerland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, India&quot;' />
                  <groupfilter from='&quot;Italy, Switzerland, Albania, Poland&quot;' function='range' level='[none:country:nk]' to='&quot;Italy, Turkey&quot;' />
                  <groupfilter from='&quot;Italy, United States&quot;' function='range' level='[none:country:nk]' to='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan, United States&quot;' />
                  <groupfilter from='&quot;Kenya&quot;' function='range' level='[none:country:nk]' to='&quot;Malaysia&quot;' />
                  <groupfilter from='&quot;Mexico&quot;' function='range' level='[none:country:nk]' to='&quot;Mexico, United States&quot;' />
                  <groupfilter from='&quot;Namibia&quot;' function='range' level='[none:country:nk]' to='&quot;Netherlands, Germany, Denmark, United Kingdom&quot;' />
                  <groupfilter from='&quot;Netherlands, United States&quot;' function='range' level='[none:country:nk]' to='&quot;Norway&quot;' />
                  <groupfilter from='&quot;Norway, Denmark, Netherlands, Sweden&quot;' function='range' level='[none:country:nk]' to='&quot;Norway, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Iceland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, United Kingdom, France, Ireland&quot;' />
                  <groupfilter from='&quot;Pakistan&quot;' function='range' level='[none:country:nk]' to='&quot;Portugal, Spain&quot;' />
                  <groupfilter from='&quot;Romania&quot;' function='range' level='[none:country:nk]' to='&quot;Saudi Arabia, Netherlands, Germany, Jordan, United Arab Emirates, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia, United Arab Emirates&quot;' />
                  <groupfilter from='&quot;Serbia, South Korea, Slovenia&quot;' function='range' level='[none:country:nk]' to='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, China, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, Czech Republic&quot;' />
                  <groupfilter from='&quot;South Korea, Japan&quot;' function='range' level='[none:country:nk]' to='&quot;Spain, Colombia&quot;' />
                  <groupfilter from='&quot;Spain, France&quot;' function='range' level='[none:country:nk]' to='&quot;Spain, Germany&quot;' />
                  <groupfilter from='&quot;Spain, Italy&quot;' function='range' level='[none:country:nk]' to='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, China, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, Hong Kong, United States, China&quot;' />
                  <groupfilter from='&quot;Thailand&quot;' function='range' level='[none:country:nk]' to='&quot;Turkey&quot;' />
                  <groupfilter from='&quot;Turkey, France, Germany, Poland&quot;' function='range' level='[none:country:nk]' to='&quot;Turkey, United States&quot;' />
                  <groupfilter from='&quot;United Arab Emirates&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom,&quot;' />
                  <groupfilter from='&quot;United Kingdom, Australia, Canada, United States&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom, Canada, United States, Germany&quot;' />
                  <groupfilter from='&quot;United Kingdom, China, United States&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom, Egypt, United States&quot;' />
                  <groupfilter from='&quot;United Kingdom, France&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom, France, Germany&quot;' />
                  <groupfilter from='&quot;United Kingdom, France, Germany, United States&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom, Germany, United States&quot;' />
                  <groupfilter from='&quot;United Kingdom, Hong Kong&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom, Ireland&quot;' />
                  <groupfilter from='&quot;United Kingdom, Israel, Russia&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom, Russia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Korea&quot;' />
                  <groupfilter from='&quot;United Kingdom, Spain, Belgium&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom, United States, Canada&quot;' />
                  <groupfilter from='&quot;United Kingdom, United States, Dominican Republic&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom, United States, Spain, Germany, Greece, Canada&quot;' />
                  <groupfilter from='&quot;United States&quot;' function='range' level='[none:country:nk]' to='&quot;United States, Brazil, India, Uganda, China&quot;' />
                  <groupfilter from='&quot;United States, Bulgaria&quot;' function='range' level='[none:country:nk]' to='&quot;United States, China, Hong Kong&quot;' />
                  <groupfilter from='&quot;United States, Czech Republic&quot;' function='range' level='[none:country:nk]' to='&quot;United States, France&quot;' />
                  <groupfilter from='&quot;United States, France, Canada, Belgium&quot;' function='range' level='[none:country:nk]' to='&quot;United States, France, Serbia&quot;' />
                  <groupfilter from='&quot;United States, France, United Kingdom, Japan&quot;' function='range' level='[none:country:nk]' to='&quot;United States, Hungary&quot;' />
                  <groupfilter from='&quot;United States, Iceland&quot;' function='range' level='[none:country:nk]' to='&quot;United States, Ireland&quot;' />
                  <groupfilter from='&quot;United States, Israel, United Kingdom, Canada&quot;' function='range' level='[none:country:nk]' to='&quot;United States, Japan&quot;' />
                  <groupfilter from='&quot;United States, Kazakhstan&quot;' function='range' level='[none:country:nk]' to='&quot;United States, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Morocco&quot;' />
                  <groupfilter from='&quot;United States, New Zealand, United Kingdom&quot;' function='range' level='[none:country:nk]' to='&quot;United States, Philippines&quot;' />
                  <groupfilter from='&quot;United States, Russia&quot;' function='range' level='[none:country:nk]' to='&quot;United States, South Korea&quot;' />
                  <groupfilter from='&quot;United States, South Korea, Japan&quot;' function='range' level='[none:country:nk]' to='&quot;Uruguay, Argentina, Spain&quot;' />
                  <groupfilter from='&quot;Uruguay, Guatemala&quot;' function='range' level='[none:country:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]' direction='ASC' using='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]' />
          <filter class='categorical' column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Movie&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]</column>
            <column>[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]' />
              <text column='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]</rows>
        <cols>[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{FE27D1EC-9F43-4C18-BE2A-61631A366401}' />
    </worksheet>
    <worksheet name='Top TV Shows'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.0rths571vl8one1f1tgtx0c8plge' />
          </datasources>
          <datasource-dependencies datasource='federated.0rths571vl8one1f1tgtx0c8plge'>
            <column-instance column='[type]' derivation='Count' name='[cnt:type:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([type])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Argentina&quot;' function='range' level='[none:country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]' direction='ASC' using='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]' />
          <filter class='categorical' column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;TV Show&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]</column>
            <column>[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]' />
              <text column='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]</rows>
        <cols>[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{61BEA557-7A68-4D62-B515-286080FFD853}' />
    </worksheet>
    <worksheet name='Type Added Over The Years'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Bookman Old Style' fontsize='18'>In year 2019 most of the Movies were added. In the year 2020 most of the Tv-Shows were added.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.0rths571vl8one1f1tgtx0c8plge' />
          </datasources>
          <datasource-dependencies datasource='federated.0rths571vl8one1f1tgtx0c8plge'>
            <column-instance column='[date_added]' derivation='Count' name='[cnt:date_added:qk]' pivot='key' type='quantitative' />
            <column caption='Date Added' datatype='date' name='[date_added]' role='dimension' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[date_added]' derivation='Year' name='[yr:date_added:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:date_added:qk]' included-values='in-range'>
            <min>1</min>
            <max>1497</max>
          </filter>
          <filter class='categorical' column='[federated.0rths571vl8one1f1tgtx0c8plge].[yr:date_added:ok]'>
            <groupfilter from='2008' function='range' level='[yr:date_added:ok]' to='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rths571vl8one1f1tgtx0c8plge].[yr:date_added:ok]</column>
            <column>[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:date_added:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:date_added:qk]</rows>
        <cols>[federated.0rths571vl8one1f1tgtx0c8plge].[yr:date_added:ok]</cols>
      </table>
      <simple-id uuid='{2F546F99-38AD-4016-8BF7-B3B8B39016E4}' />
    </worksheet>
    <worksheet name='Type Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.0rths571vl8one1f1tgtx0c8plge' />
          </datasources>
          <datasource-dependencies datasource='federated.0rths571vl8one1f1tgtx0c8plge'>
            <column-instance column='[type]' derivation='Count' name='[cnt:type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]' />
              <wedge-size column='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]' />
              <size column='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]' />
              <text column='[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4F407D0A-98CB-44CE-B41F-259F6C27F272}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Type Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:type:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87A096DE-1BEC-4EF2-BACD-99664F3DB787}' />
    </window>
    <window class='worksheet' name='Top Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BAF2C65-ADC5-43C7-84D2-38521B6657DA}' />
    </window>
    <window class='worksheet' name='Top Movies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]</field>
            <field>[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{600DC7D6-98E2-4696-9C90-AE06997104B4}' />
    </window>
    <window class='worksheet' name='Top TV Shows'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rths571vl8one1f1tgtx0c8plge].[none:country:nk]</field>
            <field>[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1628064-8D79-4A97-AD7D-5A17C122D071}' />
    </window>
    <window class='worksheet' name='Content Added Over The Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:date_added:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rths571vl8one1f1tgtx0c8plge].[cnt:date_added:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79566324-709D-4B90-A5BC-6A804673DAE2}' />
    </window>
    <window class='worksheet' maximized='true' name='Type Added Over The Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rths571vl8one1f1tgtx0c8plge].[none:type:nk]</field>
            <field>[federated.0rths571vl8one1f1tgtx0c8plge].[yr:date_added:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BA39A4D-1A77-4919-B09E-7EC7FB3928E4}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2005D6FF-74A5-4545-97E4-5363A3A1D82C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Content Added Over The Years' width='192'>
      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
      d3d55plncLlcD32eFitQS5Yf+/VUj4O2ieBJuvrFBcAy66QzeQKdndjUR/vj5vN5bty4gaZp
      /PjHP37kudzPU6vV+P3vf0+xWOS73/0uHR0dJ24L4ObNm+zt7fG9733vxG1YlsXk5CSapjE2
      Noau62xsbJyqX5FIhGQyyTvvvMP3v//9E7czPT1NOBzGNE1mZ2cplx9/RfzYrVu3AHj++ef5
      +te/zs2bNwmHww8NlFGpo+cefj3PT7PVT36A9QvbCV5dnCObTbG4uvXIz/H5fLzyyivY7fZT
      HzV2OBy8/PLLdHd3U60+/kL9tJmZmVP3yev1Hm3GLctC13V0XT/V1fKGhoZYW1ujt7f3xG2o
      qkp7eztwOMx43KHK/QzD4N133yUWi7G5ucmrr77KysoK/f39J27zi/SFbQF0nEyNjbGwEH7k
      59TrdX7729/y0ksvnXpn2TRNXn/9da5cuUJPT8+p2gKOVpDTiEaj3Lp1i62tLcbHx4lEIng8
      nlNN69VqNX70ox/x2muvcf369RO1Ua1W+cMf/sDu7i4XLlzg7bffplQqMT09TVvb4xUy2mw2
      fvrTnx7dHh0dPVGfzssXFgBT1yhrZWrmo29ktra2KBQKvP3227z88sunKpzL5/Ps7OxQr9cJ
      BoP4/f4Tt2WaJjdu3GBjY4NIJHLiP+rQ0BA/+clPjm4/88wzJ+7Tx5LJJIuLi7zwwgsnbsPl
      cvHDH/7w6PbExMSp+/WX4gubBq1rRZZWtxifvoTXebgiyzTok6d6UKK8lXvs5ymKQuCZB4dF
      pY0M2l7hsduy+RwErj3Y1pc+DWp3t3H16mXgwStCt9LVofPzB5ja4x+0cQ+04R54cMhVL9aw
      9MffB1GdNmy+B2eHKtEC1XjxsduyeR20z3Y/+EsLMB//b2opn7MuKPf+P657FcefaesRJl/O
      5UCYaZpYlnWm5wO0QlumaaIoypkc+v+4JP00M2v3a9ZzOx63X+cyHvl4oSuKcmZ/gFZpq1kD
      cJbv8yw9br/O9R18umOGXiWRSFCrG9RrFZLpLJZlUa0USWcLgEUxnyGdK/DpzdSn27LMOslE
      gkq1jmnoHCRTGKZFvaaRTGUwLQutVCCVzT+0X5ZlkkkdUChrWKZBKplENw63YqVSCYC6Xj1q
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Countries' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Top Movies' width='192'>
      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
      d3d3F0K3192Wl9ntdm7evFlY9vv9hucwqyMJgK7r3Llzh1AoxLVr1xgeHubChQs0N+/9HEJ7
      ezuffvopbreb4eFh5ufn+f73v2+ojv7+fu7evUtfXx/r6+sMDAzQ2NhoaI7r169z7969QpBu
      3bq17STNThL/8yWZ8XFD6/H83U9RXgQrr8LXDwyNp6keOlqNjTGBIwmAoig0NTWxvLzM0NAQ
      DoeDUChkKAB2u50PPvigsHzhwgXDddhsNt5++22A79xn3o3L5eK9994D4Nq1a3sak376lMTn
      Xxhaj+enf/vNgqbB+LSh8VitEoAdHEkAVFWlvLwct9tNeXk5ra2tLCwsfOsYXcuS3TB2Xbm1
      tAWb65vdgVA8xn/PGvvgvNncSpvHW1jObT0gE/mdoTlKfX+D1VlnaIwojiMJgMViIR6Pc/78
      efx+P0+ePOH69evfOkZXEySm/8nQekoa/2pbAGKZNPeXFw3N0eWt2RYANbVIdu0zY3XU/wgk
      AMfSgQYgHgkwNh/CXVVLj3/33RlFUejr6yssnzt37iDLEGLPDjQAkbU4ZwcGWJiY+JOf3f3n
      35BLZ/c8V3VbHW/8+eWDLE+IP3GgASgvt7G0uERW+9PDgNHQBtnE3pujS+QZY6IIDjQA3qZ2
      WItQ4Ws6yGmFODQHGgBFsVBd+6w34EVHGDw77t/c7yefzX/b8G0q6itRVfWlB+3ZsNX80Fg9
      pae2zVFud/Cmz9jhTm9p6bY5cLYarkO3lG+bw97bS6nBk2WqpqHw7N9SQYdTBk921XrhpRq0
      Ei+WN/7a2BxVHdt+j4raBnrevGloCodr+79Fd00v+e69fy4AFF3ZNkd1XT2lrr1fomF3OArP
      CPt/GetAmSrr+6YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top TV Shows' width='192'>
      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
      zekbIEeoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Type Added Over The Years' width='192'>
      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
      vcb/B3AfsAKRq8Q/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Type Percentage' width='164'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
